version: '3.9'
services:
  # 서비스 명
  zookeeper:
    # 사용할 이미지
    image: wurstmeister/zookeeper
    # 컨테이너명 설정
    container_name: zookeeper
    # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
    ports:
      - "2181:2181"
  # 서비스 명
  kafka:
    # 사용할 이미지
    image: wurstmeister/kafka
    # 컨테이너명 설정
    container_name: kafka
    # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
    ports:
      - "9092:9092"
    # 환경 변수 설정
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOST_NAME}
      KAFKA_CREATE_TOPICS: "chat-messages:1:2"
      KAFKA_LISTENER_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    # 볼륨 설정
    volumes:
      - /var/run/docker.sock
    # 의존 관계 설정
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:latest
    container_name: ${MONGO_CONTAINER_NAME}
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER_NANE}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379" # Redis 기본 포트
    command: redis-server --requirepass ${REDIS_PASSWORD} # 비밀번호 설정
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD} # 비밀번호를 환경 변수에서 읽음
    volumes:
      - redis_data:/data # 데이터 지속성을 위한 볼륨 설정

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    container_name: elasticsearch
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9200:9200" # Elasticsearch API 접근 포트
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elk

  kibana:
    container_name: kibana_beauty4u
    image: docker.elastic.co/kibana/kibana:7.14.1
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

volumes:
  mongodb_data:
  redis_data:
  elasticsearch_data:

networks:
  elk:
    driver: bridge
