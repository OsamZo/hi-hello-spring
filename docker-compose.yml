version: '3.9'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOST_NAME}
      KAFKA_CREATE_TOPICS: "Topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:5
    container_name: ${MONGO_CONTAINER_NAME}
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER_NANE}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379" # Redis 기본 포트
    command: redis-server --requirepass ${REDIS_PASSWORD} # 비밀번호 설정
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD} # 비밀번호를 환경 변수에서 읽음
    volumes:
      - redis_data:/data # 데이터 지속성을 위한 볼륨 설정

volumes:
  mongodb_data:
  redis_data:
